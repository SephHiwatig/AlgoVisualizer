{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../sort.service\";\nexport let QuickComponent = /*#__PURE__*/(() => {\n  class QuickComponent {\n    constructor(sortService) {\n      this.sortService = sortService;\n    }\n    ngOnInit() {\n      this.sortService.populateArray();\n      this.sortService.generateBars(\"quick\");\n      this.languageUrl = this.sortService.languageSelect(\"cplusplus\", \"quick\");\n    }\n    ngOnDestroy() {\n      this.sortService.killAnimation();\n    }\n    onLanguageSelect(language) {\n      this.languageUrl = this.sortService.languageSelect(language, \"quick\");\n    }\n    static #_ = this.ɵfac = function QuickComponent_Factory(t) {\n      return new (t || QuickComponent)(i0.ɵɵdirectiveInject(i1.SortService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: QuickComponent,\n      selectors: [[\"app-quick\"]],\n      decls: 49,\n      vars: 1,\n      consts: [[1, \"algo-container\"], [1, \"algo-info\"], [\"href\", \"https://www.geeksforgeeks.org/selection-sort/\", \"target\", \"_blank\"], [1, \"algo-visual\"], [1, \"complexities\"], [1, \"space-complexity\"], [1, \"language-menu\"], [\"id\", \"cplusplus\", 1, \"language\", 3, \"click\"], [\"id\", \"c\", 1, \"language\", 3, \"click\"], [\"id\", \"python\", 1, \"language\", 3, \"click\"], [\"id\", \"java\", 1, \"language\", 3, \"click\"], [\"id\", \"csharp\", 1, \"language\", 3, \"click\"], [1, \"code-img-wrapper\"], [\"alt\", \"code-snippet\", 3, \"src\"], [1, \"time-complexity\"], [\"src\", \"../../../assets/sample_code/sort/quick/QuickSort2.png\", \"alt\", \"code-snippet\"]],\n      template: function QuickComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"h1\");\n          i0.ɵɵtext(3, \"Quick Sort\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\");\n          i0.ɵɵtext(5, \" QuickSort is a Divide and Conquer algorithm. It picks an element as pivot and partitions the given array around the picked pivot. There are many different versions of quickSort that pick pivot in different ways. \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"ol\")(7, \"li\");\n          i0.ɵɵtext(8, \"Always pick first element as pivot.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"li\");\n          i0.ɵɵtext(10, \"Always pick last element as pivot\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"li\");\n          i0.ɵɵtext(12, \"Pick a random element as pivot.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"li\");\n          i0.ɵɵtext(14, \"Pick median as pivot.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"p\");\n          i0.ɵɵtext(16, \" The key process in quickSort is partition(). Target of partitions is, given an array and an element x of array as pivot, put x at its correct position in sorted array and put all smaller elements (smaller than x) before x, and put all greater elements (greater than x) after x. All this should be done in linear time. \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"p\")(18, \"strong\");\n          i0.ɵɵtext(19, \"Time Complexity :\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(20, \" O(nLogn) \");\n          i0.ɵɵelement(21, \"br\");\n          i0.ɵɵelementStart(22, \"strong\");\n          i0.ɵɵtext(23, \"Space Complexity :\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(24, \" O(1) \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"small\")(26, \"a\", 2);\n          i0.ɵɵtext(27, \"Source: https://www.geeksforgeeks.org/selection-sort/\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(28, \"div\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"section\", 4)(30, \"div\", 5)(31, \"div\", 6)(32, \"div\", 7);\n          i0.ɵɵlistener(\"click\", function QuickComponent_Template_div_click_32_listener() {\n            return ctx.onLanguageSelect(\"cplusplus\");\n          });\n          i0.ɵɵtext(33, \" C++ \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"div\", 8);\n          i0.ɵɵlistener(\"click\", function QuickComponent_Template_div_click_34_listener() {\n            return ctx.onLanguageSelect(\"c\");\n          });\n          i0.ɵɵtext(35, \"C\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"div\", 9);\n          i0.ɵɵlistener(\"click\", function QuickComponent_Template_div_click_36_listener() {\n            return ctx.onLanguageSelect(\"python\");\n          });\n          i0.ɵɵtext(37, \" Python \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"div\", 10);\n          i0.ɵɵlistener(\"click\", function QuickComponent_Template_div_click_38_listener() {\n            return ctx.onLanguageSelect(\"java\");\n          });\n          i0.ɵɵtext(39, \" Java \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(40, \"div\", 11);\n          i0.ɵɵlistener(\"click\", function QuickComponent_Template_div_click_40_listener() {\n            return ctx.onLanguageSelect(\"csharp\");\n          });\n          i0.ɵɵtext(41, \" C# \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(42, \"div\", 12);\n          i0.ɵɵelement(43, \"img\", 13);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(44, \"div\", 14)(45, \"h2\");\n          i0.ɵɵtext(46, \"Illustration\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(47, \"div\", 12);\n          i0.ɵɵelement(48, \"img\", 15);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(43);\n          i0.ɵɵpropertyInterpolate(\"src\", ctx.languageUrl, i0.ɵɵsanitizeUrl);\n        }\n      },\n      styles: [\"[_nghost-%COMP%]  .sort-btn{position:absolute;top:5px;left:5px;border:none;background-color:#1fa638;color:#fff;padding:10px;border-radius:4px;cursor:pointer}[_nghost-%COMP%]  .sort-btn:hover{transform:scale(1.1);transition:.1s ease-in-out}[_nghost-%COMP%]  .sort-btn:active{background-color:#78c987}[_nghost-%COMP%]  .bar{margin-left:1px;margin-right:1px;background-color:#428df5}[_nghost-%COMP%]  .active-menu{border-bottom:4px solid #3f51b5}\"]\n    });\n  }\n  return QuickComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}